/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *      TreeNode *value;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int value;
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>>result;
        vector<int>level;
        queue<TreeNode*>myQueue;
        if(root == NULL)
            return result;
        myQueue.push(root);
        int currentNodeNum = 1;
        int nextNodeNum = 0;
        while(!myQueue.empty()){
            TreeNode* temp = myQueue.front();
            myQueue.pop();
            level.push_back(value);
            currentNodeNum--;
            if(temp->left != NULL){
                myQueue.push(temp->left);
                nextNodeNum++;
            }
            if(temp->right != NULL){
                myQueue.push(temp->right);
                nextNodeNum++;
            }
            if(currentNodeNum == 0){
                result.push_back(level);
                    level.clear();
                    currentNodeNum = nextNodeNum;
                    nextNodeNum = 0;
            }
                
        }
        vector<vector<int>>final;
        for(int i = result.size()-1; i>0; i--){
            final.push_back(result[i]);
        }
        return final;
    }
    
};
